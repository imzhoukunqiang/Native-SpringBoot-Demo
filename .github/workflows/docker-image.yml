# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Spring Boot(Native Image)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    # In this step, this action saves a list of existing images,
    # the cache is created without them in the post run.
    # It also restores the cache if it exists.
    - uses: jpribyl/action-docker-layer-caching@v0.1.1
      # Ignore the failure of a step and avoid terminating the job.
      continue-on-error: true

    - uses: graalvm/setup-graalvm@v1
      with:
        java-version: '17.0.7'
        distribution: 'graalvm' # See 'Options' for all available distributions
        cache: 'maven'
    - name: Example step
      run: |
        echo "GRAALVM_HOME: $GRAALVM_HOME"
        echo "JAVA_HOME: $JAVA_HOME"
        java --version
        native-image --version
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set VERSION environment variable
      run: |
        echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

    - name: Build with Maven & push to docker hub
      run: |
        mvn -DskipTests=true spring-boot:build-image
        docker tag spring-boot-native:${{ env.VERSION }} zhoukq/spring-boot-native:latest
        docker push zhoukq/spring-boot-native:latest
        docker push zhoukq/spring-boot-native:${{ env.VERSION }}

